pragma solidity ^0.8.0;

contract TransactiveEnergy {
    
    address public owner;
    uint public energyPrice;
    uint public energyAvailable;
    
    constructor() {
        owner = msg.sender;
        energyPrice = 0;
        energyAvailable = 0;
    }
    
    function setEnergyPrice(uint _energyPrice) public {
        require(msg.sender == owner, "Only the owner can set the energy price");
        energyPrice = _energyPrice;
    }
    
    function setEnergyAvailable(uint _energyAvailable) public {
        require(msg.sender == owner, "Only the owner can set the available energy");
        energyAvailable = _energyAvailable;
    }
    
    function buyEnergy(uint _energyAmount) public payable {
        require(msg.value == energyPrice * _energyAmount, "Invalid payment amount");
        require(_energyAmount <= energyAvailable, "Not enough energy available");
        energyAvailable -= _energyAmount;
        payable(owner).transfer(msg.value);
        // TODO: Add code to transfer energy to buyer
    }
}
